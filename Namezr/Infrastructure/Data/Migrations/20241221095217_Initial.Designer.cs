// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Namezr.Infrastructure.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Namezr.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241221095217_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Namezr.Features.Questionnaires.Data.QuestionnaireEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Questionnaires");
                });

            modelBuilder.Entity("Namezr.Features.Questionnaires.Data.QuestionnaireFieldEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid>("QuestionnaireId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("QuestionnaireFields");
                });

            modelBuilder.Entity("Namezr.Features.Questionnaires.Data.QuestionnaireFieldEntity", b =>
                {
                    b.HasOne("Namezr.Features.Questionnaires.Data.QuestionnaireEntity", "Questionnaire")
                        .WithMany("Fields")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Namezr.Client.Studio.Questionnaires.Edit.QuestionnaireFileUploadFieldOptionsModel", "FileUploadOptions", b1 =>
                        {
                            b1.Property<Guid>("QuestionnaireFieldEntityId")
                                .HasColumnType("uuid");

                            b1.PrimitiveCollection<List<string>>("AllowedExtensions")
                                .IsRequired()
                                .HasColumnType("text[]");

                            b1.Property<int>("MaxItemCount")
                                .HasColumnType("integer");

                            b1.Property<decimal?>("MaxItemSize")
                                .HasColumnType("numeric");

                            b1.HasKey("QuestionnaireFieldEntityId");

                            b1.ToTable("QuestionnaireFields");

                            b1.ToJson("FileUploadOptions");

                            b1.WithOwner()
                                .HasForeignKey("QuestionnaireFieldEntityId");
                        });

                    b.OwnsOne("Namezr.Client.Studio.Questionnaires.Edit.QuestionnaireNumberFieldOptionsModel", "NumberOptions", b1 =>
                        {
                            b1.Property<Guid>("QuestionnaireFieldEntityId")
                                .HasColumnType("uuid");

                            b1.Property<decimal?>("MaxValue")
                                .HasColumnType("numeric");

                            b1.Property<decimal?>("MinValue")
                                .HasColumnType("numeric");

                            b1.HasKey("QuestionnaireFieldEntityId");

                            b1.ToTable("QuestionnaireFields");

                            b1.ToJson("NumberOptions");

                            b1.WithOwner()
                                .HasForeignKey("QuestionnaireFieldEntityId");
                        });

                    b.OwnsOne("Namezr.Client.Studio.Questionnaires.Edit.QuestionnaireTextFieldOptionsModel", "TextOptions", b1 =>
                        {
                            b1.Property<Guid>("QuestionnaireFieldEntityId")
                                .HasColumnType("uuid");

                            b1.Property<bool>("IsMultiline")
                                .HasColumnType("boolean");

                            b1.Property<int?>("MaxLength")
                                .HasColumnType("integer");

                            b1.Property<int?>("MinLength")
                                .HasColumnType("integer");

                            b1.HasKey("QuestionnaireFieldEntityId");

                            b1.ToTable("QuestionnaireFields");

                            b1.ToJson("TextOptions");

                            b1.WithOwner()
                                .HasForeignKey("QuestionnaireFieldEntityId");
                        });

                    b.Navigation("FileUploadOptions");

                    b.Navigation("NumberOptions");

                    b.Navigation("Questionnaire");

                    b.Navigation("TextOptions");
                });

            modelBuilder.Entity("Namezr.Features.Questionnaires.Data.QuestionnaireEntity", b =>
                {
                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
