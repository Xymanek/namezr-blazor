@page "/studio/{creatorId:guid}/questionnaires/{questionnaireId:guid}/selection/{selectionId:guid}"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using Namezr.Client
@using Namezr.Components.Layout
@using Namezr.Features.Questionnaires.Data
@using Namezr.Infrastructure.Data
@using Namezr.Features.SelectionSeries.Data
@using Namezr.Client.Studio.Questionnaires.Selection

@attribute [Authorize]
@layout StudioLayout

@inject IDbContextFactory<ApplicationDbContext> DbContextFactory

@if (_questionnaire is not null)
{
    <div class="d-flex gap-3 align-items-center justify-content-between">
        <h3>@_questionnaire.Title</h3>
        <a
            href="/studio/@CreatorId.NoHyphens()/questionnaires/@QuestionnaireId.NoHyphens()"
            class="btn btn-secondary">
            Questionnaire
        </a>
    </div>
}

@if (_selectionSeries is not null)
{
    <h4>@_selectionSeries.Name</h4>
}

<NewSelectionBatchForm
    SelectionSeriesId="SelectionId"
/>

<h4>Results</h4>

<table class="table table-striped">
    <thead>
    <tr>
        <th>User</th>
        <th>Submission ID</th>
        <th></th>
    </tr>
    </thead>

    <tbody>
    @if (_selectionSeries != null)
    {
        @foreach (SelectionBatchEntity batch in _selectionSeries.Batches!.OrderByDescending(x => x.RollCompletedAt))
        {
            <tr>
                <td colspan="3" class="text-center">
                    <strong>Rolled on @batch.RollCompletedAt</strong>
                </td>
            </tr>

            // We want the end of the batch (highest batch position) to be at the top
            @foreach (SelectionEntryEntity entry in batch.Entries!.OrderByDescending(x => x.BatchPosition))
            {
                <tr>
                    @switch (entry)
                    {
                        case SelectionEntryPickedEntity picked:
                        {
                            QuestionnaireSubmissionEntity submission = (QuestionnaireSubmissionEntity)picked.Candidate;

                            <td>@submission.User.Email</td>
                            <td>@submission.Id</td>
                            <td>
                                <a href="/studio/@CreatorId.NoHyphens()/questionnaires/@QuestionnaireId.NoHyphens()/submissions/@submission.Id.NoHyphens()"
                                   class="btn btn-primary">
                                    View
                                </a>
                            </td>
                            break;
                        }

                        case SelectionEntryEventEntity eventEntity:
                            <td colspan="3" class="text-center">
                                <em>@eventEntity.Kind</em>
                            </td>
                            break;
                    }
                </tr>
            }
        }
    }

    @*<tr>
        <td colspan="3" class="text-center">
            <strong>Template below</strong>
        </td>
    </tr>

    <tr>
        <td colspan="3" class="text-center">
            <em>Rolling...</em>
        </td>
    </tr>
    <tr>
        <td colspan="3" class="text-center">
            <strong>Rolled on 25 February 2023 at 11:00 AM</strong>
        </td>
    </tr>
    <tr>
        <td>john@example.com</td>
        <td>@Guid.NewGuid()</td>
        <td>
            <a href="/studio/@CreatorId.NoHyphens()/questionnaires/@QuestionnaireId.NoHyphens()/submissions/1"
               class="btn btn-primary">
                View
            </a>
        </td>
    </tr>
    <tr>
        <td>jane@example.com</td>
        <td>@Guid.NewGuid()</td>
        <td>
            <a href="/studio/@CreatorId.NoHyphens()/questionnaires/@QuestionnaireId.NoHyphens()/submissions/1"
               class="btn btn-primary">
                View
            </a>
        </td>
    </tr>*@
    </tbody>
</table>

<h4>User statistics</h4>

<table class="table table-striped">
    <thead>
    <tr>
        <th>User</th>
        <th>Modifier</th>
        <th>Has been select in current iteration</th>
        <th>Total times selected</th>
    </tr>
    </thead>

    <tbody>
    <tr>
        <td>john@example.com</td>
        <td>1.5</td>
        <td>No</td>
        <td>3</td>
    </tr>
    </tbody>
</table>

@code {

    [CascadingParameter]
    public required StudioLayout StudioLayout { get; set; }

    [Parameter]
    public Guid CreatorId { get; set; }

    [Parameter]
    public Guid QuestionnaireId { get; set; }

    [Parameter]
    public Guid SelectionId { get; set; }

    private QuestionnaireEntity? _questionnaire;
    private SelectionSeriesEntity? _selectionSeries;

    [SupplyParameterFromForm]
    private NewSelectionBatchOptionsModel? NewSelectionBatchOptions { get; set; }

    protected override async Task OnInitializedAsync()
    {
        NewSelectionBatchOptions ??= new NewSelectionBatchOptionsModel();

        await StudioLayout.SetCurrentCreatorAndValidateAccess(CreatorId);

        await using ApplicationDbContext dbContext = await DbContextFactory.CreateDbContextAsync();

        _questionnaire = await dbContext.Questionnaires
            .AsNoTracking()
            .FirstOrDefaultAsync(q => q.Id == QuestionnaireId && q.CreatorId == CreatorId);

        _selectionSeries = await dbContext.SelectionSeries
            .Include(x => x.UserData)
            .Include(x => x.Batches!)
            .ThenInclude(x => x.Entries)
            .ThenInclude(entry => (entry as SelectionEntryPickedEntity)!.Candidate)
            .ThenInclude(candidate => (candidate as QuestionnaireSubmissionEntity)!.User)
            .AsSplitQuery()
            .SingleOrDefaultAsync(x => x.Id == SelectionId);
    }

}