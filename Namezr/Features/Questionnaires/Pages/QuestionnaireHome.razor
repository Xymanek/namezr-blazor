@page "/questionnaires/{QuestionnaireId:guid}"

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.EntityFrameworkCore
@using Namezr.Client.Public.Questionnaires
@using Namezr.Features.Questionnaires.Data
@using Namezr.Infrastructure.Data

@inject ApplicationDbContext DbContext

<h3>QuestionnaireHome</h3>

@* TODO: display the form, but disabled *@
<AuthorizeView>
    <Authorized>
        @if (ConfigModel is not null)
        {
            <SubmissionEditor
                Config="ConfigModel"
                QuestionnaireVersionId="QuestionnaireVersionId!.Value"
            />
        }        
    </Authorized>
    
    <NotAuthorized>
        <p>You must be logged in to submit a response.</p>
    </NotAuthorized>
</AuthorizeView>

@code {

    [Parameter]
    public Guid QuestionnaireId { get; set; }
    
    private QuestionnaireConfigModel? ConfigModel { get; set; }
    private Guid? QuestionnaireVersionId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        QuestionnaireVersionEntity? versionEntity = await DbContext.QuestionnaireVersions
            .AsNoTracking()
            .Include(x => x.Questionnaire)
            .Include(x => x.Fields!).ThenInclude(x => x.Field)
            .OrderByDescending(x => x.CreatedAt)
            .FirstOrDefaultAsync(q => q.Questionnaire.Id == QuestionnaireId);
        
        ConfigModel = versionEntity?.MapToConfigModel();
        QuestionnaireVersionId = versionEntity?.Id;
    }

}