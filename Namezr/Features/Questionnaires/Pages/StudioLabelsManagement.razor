@page "/studio/{creatorId:guid}/config/submission-labels"

@using Microsoft.EntityFrameworkCore
@using Namezr.Client.Shared
@using Namezr.Components.Layout
@using Namezr.Infrastructure.Data
@using Namezr.Components
@using Namezr.Features.Questionnaires.Data
@using Namezr.Features.Questionnaires.Mappers
@using Microsoft.AspNetCore.Components.Sections
@using Namezr.Client
@using Namezr.Features.StudioCommon.Components
@using Namezr.Client.Studio.Questionnaires.LabelsManagement

@layout StudioPageHeaderLayout

@inject IDbContextFactory<ApplicationDbContext> DbContextFactory

<PageTitle>
    Submission labels
    <StudioTitleSuffix/>
</PageTitle>

<SectionContent SectionId="StudioPageHeaderLayout.BreadcrumbSectionId">
    <HxBreadcrumb>
        <ConfigurationBreadcrumbItems CreatorId="CreatorId"/>

        <HxBreadcrumbItem
            Href=@($"studio/{CreatorId.NoHyphens()}/config/submission-labels")
            Text="Submission labels"
        />
    </HxBreadcrumb>
</SectionContent>

<SectionContent SectionId="StudioPageHeaderLayout.TitleSectionId">
    Submission labels
</SectionContent>

@if (_labelModels == null) return;

<LabelsManager
    Labels="_labelModels"
/>

@code {

    [CascadingParameter]
    public required HttpContext HttpContext { get; set; } = null!;

    [CascadingParameter]
    public required IStudioPageContext StudioContext { get; set; }

    [Parameter]
    public Guid CreatorId { get; set; }

    private List<SubmissionLabelModel>? _labelModels;

    protected override async Task OnInitializedAsync()
    {
        await StudioContext.SetCurrentCreatorAndValidateAccess(CreatorId);

        await using ApplicationDbContext dbContext = await DbContextFactory.CreateDbContextAsync();

        SubmissionLabelEntity[] labelEntities = await dbContext.SubmissionLabels
            .Where(label => label.CreatorId == CreatorId)
            .ToArrayAsync();

        _labelModels = labelEntities
            .Select(SubmissionLabelMapper.ToModel)
            .ToList();
    }

}