@page "/studio/{creatorId:guid}/config/staff/invite"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using Namezr.Client
@using Namezr.Components.Layout
@using Namezr.Features.Creators.Data
@using Namezr.Infrastructure.Data
@using Microsoft.AspNetCore.Components.Sections
@using Namezr.Features.StudioCommon.Components

@attribute [Authorize]
@layout StudioPageHeaderLayout

@inject IDbContextFactory<ApplicationDbContext> DbContextFactory
@inject NavigationManager NavigationManager

<SectionContent SectionId="StudioPageHeaderLayout.BreadcrumbSectionId">
    <HxBreadcrumb>
        <ConfigurationBreadcrumbItems CreatorId="CreatorId"/>

        <HxBreadcrumbItem
            Href=@($"studio/{CreatorId.NoHyphens()}/config/staff")
            Text="Staff"
        />
        
        <HxBreadcrumbItem
            Href=@($"studio/{CreatorId.NoHyphens()}/config/staff/invite")
            Text="Invite"
        />
    </HxBreadcrumb>
</SectionContent>

<SectionContent SectionId="StudioPageHeaderLayout.TitleSectionId">
    Invite staff member
</SectionContent>

<form method="post" @formname="invite-staff-form" @onsubmit="HandleSubmit">
    <AntiforgeryToken/>
    <HxSubmit Color="ThemeColor.Success">
        Create invite
    </HxSubmit>
</form>

@if (_generatedToken is not null)
{
    <p>
        Staff invitation link:
    </p>
    <p>
        @NavigationManager.ToAbsoluteUri($"/studio/staff-invite/{_generatedToken.Value.NoHyphens()}")
    </p>
}

@code {

    [CascadingParameter]
    public required IStudioPageContext StudioContext { get; set; }

    [Parameter]
    public Guid CreatorId { get; set; }

    [SupplyParameterFromForm]
    private DummyModel? FormModel { get; set; }
    
    [CascadingParameter]
    public required HttpContext HttpContext { get; set; }

    private Guid? _generatedToken;

    protected override async Task OnInitializedAsync()
    {
        await StudioContext.SetCurrentCreatorAndValidateAccess(CreatorId);

        // TODO: why does the native @onsubmit does not work????
        if (HttpContext.Request.Method == HttpMethods.Post)
        {
            await HandleSubmit();
        }
    }

    private async Task HandleSubmit()
    {
        await using ApplicationDbContext dbContext = await DbContextFactory.CreateDbContextAsync();

        StaffInviteEntity invite = new()
        {
            CreatorId = CreatorId,
        };

        dbContext.StaffInvites.Add(invite);
        await dbContext.SaveChangesAsync();

        _generatedToken = invite.Id;
    }

    private class DummyModel
    {
        //
    }

}