@page "/studio/{creatorId:guid}/config/targets"

@using Microsoft.EntityFrameworkCore
@using Namezr.Components.Layout
@using Namezr.Features.Creators.Data
@using Namezr.Infrastructure.Data
@using Microsoft.AspNetCore.Components.Sections
@using Namezr.Client
@using Namezr.Features.StudioCommon.Components
@using Namezr.Components

@layout StudioPageHeaderLayout

@inject IDbContextFactory<ApplicationDbContext> DbContextFactory

<PageTitle>
    Current support targets
    <StudioTitleSuffix/>
</PageTitle>

<SectionContent SectionId="StudioPageHeaderLayout.BreadcrumbSectionId">
    <HxBreadcrumb>
        <ConfigurationBreadcrumbItems CreatorId="CreatorId"/>

        <HxBreadcrumbItem
            Href=@($"studio/{CreatorId.NoHyphens()}/config/targets")
            Text="Support targets"
        />
    </HxBreadcrumb>
</SectionContent>

<SectionContent SectionId="StudioPageHeaderLayout.TitleSectionId">
    Current support targets
</SectionContent>

<SectionContent SectionId="StudioPageHeaderLayout.ButtonsSectionId">
    <a
        href="/studio/@CreatorId.NoHyphens()/config/targets/new"
        class="btn btn-success"
    >
        Add
    </a>
</SectionContent>

<div class="d-flex flex-column gap-3">
    @foreach (SupportTargetEntity supportTarget in _supportTargets)
    {
        <HxCard>
            <BodyTemplate>
                <div class="row">
                    <div class="col-lg-9">
                        <HxCardSubtitle>
                            @supportTarget.ServiceType
                        </HxCardSubtitle>

                        <HxCardTitle>
                            @supportTarget.DisplayName
                        </HxCardTitle>

                        <HxCardText>
                            ID: @supportTarget.ServiceId
                        </HxCardText>

                        @if (supportTarget.HomeUrl is not null)
                        {
                            <HxCardText>
                                URL: <a href="@supportTarget.HomeUrl">@supportTarget.HomeUrl</a>
                            </HxCardText>
                        }

                        @if (supportTarget.JoinUrl is not null)
                        {
                            <HxCardText>
                                Join URL: <a href="@supportTarget.JoinUrl">@supportTarget.JoinUrl</a>
                            </HxCardText>
                        }
                    </div>

                    @if (supportTarget.LogoFileId is not null)
                    {
                        <div class="col-lg-3">
                            <img
                                src="@($"{ApiEndpointPaths.SupportTargetsLogoDownload}?supportTargetId={supportTarget.Id}")"
                                alt="Support target logo"
                                class="img-fluid"
                            />
                        </div>
                    }
                </div>
            </BodyTemplate>
        </HxCard>
    }
</div>

@code {

    [CascadingParameter]
    public required HttpContext HttpContext { get; set; } = null!;

    [CascadingParameter]
    public required IStudioPageContext StudioContext { get; set; }

    [Parameter]
    public Guid CreatorId { get; set; }

    private SupportTargetEntity[] _supportTargets = [];

    protected override async Task OnInitializedAsync()
    {
        await StudioContext.SetCurrentCreatorAndValidateAccess(CreatorId);

        await using ApplicationDbContext dbContext = await DbContextFactory.CreateDbContextAsync();

        _supportTargets = await dbContext.SupportTargets
            .Where(t => t.CreatorId == CreatorId)
            .ToArrayAsync(HttpContext.RequestAborted);
    }

}