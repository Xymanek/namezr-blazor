@inherits LayoutComponentBase
@implements IDisposable

@inject NavigationManager NavigationManager

<div class="page">
    <header class="p-3 border-bottom">
        <div class="container">
            <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start">
                <a href="/" class="d-flex align-items-center mb-2 mb-lg-0 link-body-emphasis text-decoration-none">
                    @*<svg class="bi me-2" width="40" height="32" role="img" aria-label="Bootstrap">
                        <use xlink:href="#bootstrap"></use>
                    </svg>*@
                    <strong>Namezr</strong>
                </a>

                <ul class="nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0">
                    <li><a href="#" class="nav-link px-2 link-body-emphasis">Creators list</a></li>
                    <li><a href="#" class="nav-link px-2 link-body-emphasis">For creators</a></li>
                </ul>

                @* At some point, we will want a site-wide search bar, e.g. creators *@
                @*<form class="col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3" role="search">
                    <input type="search" class="form-control" placeholder="Search..." aria-label="Search">
                </form>*@

                <AuthorizeView>
                    <Authorized>
                        <div class="dropdown text-end">
                            <a href="#" class="d-block link-body-emphasis text-decoration-none dropdown-toggle"
                               data-bs-toggle="dropdown" aria-expanded="false">
                                @context.User.Identity?.Name
                            </a>
                            <ul class="dropdown-menu text-small">
                                <li><a class="dropdown-item" href="#">My creators</a></li>
                                <li><a class="dropdown-item" href="#">Settings</a></li>
                                <li>
                                    <hr class="dropdown-divider">
                                </li>
                                <li>
                                    <form action="Account/Logout" method="post">
                                        <AntiforgeryToken/>
                                        <input type="hidden" name="ReturnUrl" value="@_currentUrl"/>
                                        <button type="submit" class="dropdown-item">
                                            Logout
                                        </button>
                                    </form>
                                    @* <a class="dropdown-item" href="#">Sign out</a> *@
                                </li>
                            </ul>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <a class="btn btn-primary" href="Account/Login">
                            Login
                        </a>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>
    </header>

    <div class="main-container">
        <div class="sidebar">
            <NavMenu/>
        </div>

        <main>
            <div class="container">
                @Body
            </div>
        </main>
    </div>
</div>

<BlazorErrorUI/>

@code {
    private string? _currentUrl;

    protected override void OnInitialized()
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}