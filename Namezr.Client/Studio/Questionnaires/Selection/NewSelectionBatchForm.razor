@rendermode InteractiveWebAssembly

@using Namezr.Client.Infra
@using Namezr.Client.Shared
@using vNext.BlazorComponents.FluentValidation

@inject ISpaHttpClientProvider HttpClientProvider
@inject NavigationManager NavigationManager

<HxCard>
    <BodyTemplate>
        <HxCardTitle>
            New batch
        </HxCardTitle>

        <EditForm
            Model="Model"
            FormName="new-selection-batch"
            OnValidSubmit="HandleNewSelectionBatchValidSubmit"
        >
            <FluentValidationValidator/>

            <div class="row">
                <div class="col-lg-3">
                    <HxCheckbox
                        Label="Allow starting new cycle"
                        @bind-Value="Model!.AllowRestarts"
                    />
                </div>
                <div class="col-lg-3">
                    <HxCheckbox
                        Label="Force recalculate eligibility"
                        @bind-Value="Model!.ForceRecalculateEligibility"
                    />
                </div>
                <div class="col-lg-3">
                    <HxInputNumber
                        Label="Number of entries to select"
                        @bind-Value="Model!.NumberOfEntriesToSelect"
                    />
                </div>
                <div class="col-lg-3 d-flex align-items-end">
                    <HxSubmit
                        Enabled="RendererInfo.IsInteractive"
                        Color="ThemeColor.Success"
                        Text="Roll"
                        CssClass="w-100"
                    />
                </div>
            </div>

            <div class="row mt-3">
                <div class="col-lg-6">
                    <HxMultiSelect
                        Label="Included labels"
                        EmptyText="No filter"
                        Data="PossibleLabels"
                        @bind-Value="Model!.IncludedLabelIds"
                        ValueSelector="@(x => x.Id)"
                        TextSelector="@(label => label.Text)"
                    />
                </div>
                <div class="col-lg-6">
                    <HxMultiSelect
                        Label="Excluded labels"
                        EmptyText="No filter"
                        Data="PossibleLabels"
                        @bind-Value="Model!.ExcludedLabelIds"
                        ValueSelector="@(x => x.Id)"
                        TextSelector="@(label => label.Text)"
                    />
                </div>
            </div>
        </EditForm>
    </BodyTemplate>
</HxCard>

@code {

    [Parameter]
    public Guid SelectionSeriesId { get; set; }

    [Parameter]
    public List<SubmissionLabelModel> PossibleLabels { get; set; } = [];
    
    private NewSelectionBatchOptionsModel Model { get; } = new();

    private async Task HandleNewSelectionBatchValidSubmit()
    {
        HttpResponseMessage response = await HttpClientProvider.HttpClient.PostAsJsonAsync(
            ApiEndpointPaths.SelectionNewBatch,
            new NewSelectionBatchRequest
            {
                SeriesId = SelectionSeriesId,
                BatchOptions = Model,
            }
        );

        response.EnsureSuccessStatusCode();

        // Display the new results
        NavigationManager.Refresh();
    }

}