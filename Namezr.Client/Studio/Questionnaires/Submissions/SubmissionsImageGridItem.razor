@rendermode InteractiveWebAssembly

@using Namezr.Client.Public.Questionnaires
@using Namezr.Client.Studio.Questionnaires.Edit

@{
    SubmissionFileData[] images = GetImages().ToArray();
}

<div class="col-lg-2 col-md-4 col-12">
    @if (FieldToDisplay.Type != QuestionnaireFieldType.FileUpload)
    {
        <HxCard>
            <BodyTemplate>
                <div>Not an image</div>
            </BodyTemplate>
        </HxCard>
    }
    else if (images.Length < 1)
    {
        <HxCard>
            <BodyTemplate>
                <div>No images</div>
            </BodyTemplate>
        </HxCard>
    }
    else
    {
        /* TODO: border similar to HxCard */
        <div class="border rounded">
            <div style="height: 300px">
                <HxCarousel Ride="CarouselRide.False" Controls="false" Crossfade="true">
                    @for (int i = 0; i < images.Length; i++)
                    {
                        SubmissionFileData file = images[i];

                        /* TODO: different logic when hovering */
                        <HxCarouselItem Active="CurrentIndexCounter % images.Length == i">
                            <img
                                style="object-fit: cover; height: 300px"
                                alt="@file.Name"
                                src="@GetImageUrl(file)"
                            />
                        </HxCarouselItem>
                    }
                </HxCarousel>
            </div>

            <div style="display: grid; grid-auto-flow: column; grid-auto-columns: minmax(0, 1fr);">
                @foreach (SubmissionFileData file in images)
                {
                    <div>
                        <img
                            style="object-fit: cover; width: 100%; height: 50px"
                            alt="@file.Name"
                            src="@GetImageUrl(file)"
                        />
                    </div>
                }
            </div>
        </div>

        @* TODO: absolute-positioned div with checkbox for selection and labels (1st letter). vertical stack *@
    }
</div>

@code {

    [Parameter]
    public required SubmissionTableItemModel Item { get; set; }

    [Parameter]
    public required QuestionnaireConfigFieldModel FieldToDisplay { get; set; }

    [Parameter]
    public required long CurrentIndexCounter { get; set; }

    private IEnumerable<SubmissionFileData> GetImages()
    {
        if (!Item.Values.TryGetValue(FieldToDisplay.Id, out SubmissionValueModel? fieldValue))
        {
            yield break;
        }

        foreach (SubmissionFileData fileData in fieldValue.FileValue ?? [])
        {
            if (fileData.IsDisplayableImage())
            {
                yield return fileData;
            }
        }
    }

    private string GetImageUrl(SubmissionFileData file)
    {
        return $"{ApiEndpointPaths.QuestionnaireSubmissionDownloadFile}?submissionId={Item.Id}&fileId={file.Id}";
    }

}
